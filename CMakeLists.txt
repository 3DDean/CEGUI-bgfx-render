#TODO FINISH SETTING UP CEGUI
cmake_minimum_required (VERSION 3.8)
project(CEGUI_BGFX_RenderModule)

set (CEGUI_BGFX_RenderModule_VERSION_MAJOR 0)
set (CEGUI_BGFX_RenderModule_VERSION_MINOR 1)
set (CEGUI_BGFX_RenderModule_VERSION_PATCH 0)
set (CEGUI_BGFX_RenderModule_VERSION_EXTRA "")
set (CEGUI_BGFX_RenderModule_VERSION "${CEGUI_BGFX_RenderModule_VERSION_MAJOR}.${CEGUI_BGFX_RenderModule_VERSION_MINOR}")

set_property(GLOBAL PROPERTY USE_FOLDERS ON)
if (MSVC)
	set(USE_MSVC_RUNTIME_LIBRARY_DLL OFF CACHE BOOL "Use MSVC runtime library DLL")
    set(CMAKE_CXX_FLAGS_RELEASE "/MT")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
	#set(CMAKE_CXX_FLAGS_DEBUG "/MTd")
endif() 

if (WIN32)
    set (CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")
else()
    set (CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")
endif()
set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")
set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
set (CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})

set (CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
set (CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
set (CMAKE_LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
set (CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})

set (CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})

if (WIN32)
	SET(_window_ 1)
	MESSAGE(STATUS "using windows")
	set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT CEGUI_BGFX_RenderModule)
	set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT CEGUI_BGFX_RenderModule)
elseif (APPLE)
	SET(_os_ 1)
elseif (UNIX)
	SET(_linux_ 1)
else()
    message(FATAL_ERROR "No supported platform was detected")
endif()


configure_file (
  "${PROJECT_SOURCE_DIR}/config1.h.in"
  "${PROJECT_BINARY_DIR}/config1.h"
  )
include_directories("${PROJECT_BINARY_DIR}")
include_directories("${PROJECT_SOURCE_DIR}/src")
set (CMAKE_RUNTIME_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/bin")


set(BGFX_BUILD_EXAMPLES OFF CACHE BOOL "Build bgfx examples.")
set(BGFX_BUILD_TOOLS OFF CACHE BOOL "Build bgfx tools.")
add_subdirectory("../externals/BGFX")


SET(CEGUI_SAMPLES_ENABLED ON CACHE BOOL "Specifies whether to build the CEGUI sample applications")

SET( CEGUI_MODULE_INSTALL_DIR "${PROJECT_BINARY_DIR}/lib/cegui" CACHE FILEPATH "Specifies custom location for CEGUI_MODULE_INSTALL_DIR" )  
SET( CEGUI_MODULE_INSTALL_DIR ON CACHE BOOL "Specifies custom location for CEGUI_MODULE_INSTALL_DIR" )  


add_subdirectory("../externals/CEGUI")



include_directories(
    "../externals/CEGUI/cegui/include"
	_build/externals/CEGUI/cegui/include
)

file( GLOB SRC_FILES 
	${PROJECT_SOURCE_DIR}/src/*.cpp 
	${PROJECT_SOURCE_DIR}/src/*.h
)

add_executable (CEGUI_BGFX_RenderModule ${SRC_FILES} ${DEBUG_DRAW} ${GUI})


target_include_directories(CEGUI_BGFX_RenderModule PUBLIC "${GLFW_SOURCE_DIR}/src"
                           "${GLFW_BINARY_DIR}/src"
						   "${GLFW_SOURCE_DIR}/include"
						   "${BULLET_INCLUDE_DIRS}")



set_target_properties ("CEGUIBase-0" "CEGUICommonDialogs-0" "CEGUICoreWindowRendererSet" "CEGUIExpatParser" "CEGUIOpenGLRenderer-0" "CEGUISILLYImageCodec"
PROPERTIES
    FOLDER CEGUI
)
			
target_link_libraries(CEGUI_BGFX_RenderModule 
bgfx bx bimg  "CEGUIBase-0" "CEGUICommonDialogs-0" "CEGUICoreWindowRendererSet" "CEGUIExpatParser" "CEGUIOpenGLRenderer-0" "CEGUISILLYImageCodec"

)

file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/shaders DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

install(TARGETS CEGUI_BGFX_RenderModule DESTINATION bin)

